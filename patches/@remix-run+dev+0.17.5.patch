diff --git a/node_modules/@remix-run/dev/compiler.js b/node_modules/@remix-run/dev/compiler.js
index 86e2c58..7816577 100644
--- a/node_modules/@remix-run/dev/compiler.js
+++ b/node_modules/@remix-run/dev/compiler.js
@@ -18,6 +18,7 @@ var dependencies = require('./compiler/dependencies.js');
 var loaders = require('./compiler/loaders.js');
 var routes = require('./compiler/routes.js');
 var fs = require('./compiler/utils/fs.js');
+var vanillaExtractPlugin = require('@vanilla-extract/esbuild-plugin').vanillaExtractPlugin;
 
 function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }
 
@@ -194,7 +195,7 @@ async function createBrowserBuild(config, options) {
     define: {
       "process.env.NODE_ENV": JSON.stringify(options.mode)
     },
-    plugins: [browserRouteModulesPlugin(config, /\?browser$/), emptyModulesPlugin(config, /\.server(\.[jt]sx?)?$/)]
+    plugins: [vanillaExtractPlugin(), browserRouteModulesPlugin(config, /\?browser$/), emptyModulesPlugin(config, /\.server(\.[jt]sx?)?$/)]
   });
 }
 
@@ -217,7 +218,7 @@ async function createServerBuild(config, options) {
     // of CSS and other files.
     assetNames: "_assets/[name]-[hash]",
     publicPath: config.publicPath,
-    plugins: [serverRouteModulesPlugin(config), emptyModulesPlugin(config, /\.client(\.[jt]sx?)?$/), manualExternalsPlugin((id, importer) => {
+    plugins: [vanillaExtractPlugin(), serverRouteModulesPlugin(config), emptyModulesPlugin(config, /\.client(\.[jt]sx?)?$/), manualExternalsPlugin((id, importer) => {
       // assets.json is external because this build runs in parallel with the
       // browser build and it's not there yet.
       if (id === "./assets.json" && importer === "<stdin>") return true; // Mark all bare imports as external. They will be require()'d at
